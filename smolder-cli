#!/usr/bin/env python
import os
import yaml
import sys
from smolder import tcp_test
from smolder.charcoal import Charcoal
FORMAT = '%(asctime)-15s %(name)s [%(levelname)s]: %(message)s'
import logging
import argh
from argh import arg, dispatch_command
logging.basicConfig(format=FORMAT, level=logging.ERROR, datefmt="%Y-%m-%d %H:%M:%S")
LOG = logging.getLogger('smolder')
LOG.setLevel(logging.DEBUG)
PARSER = argh.ArghParser()


@dispatch_command
@arg('host', help='IP address or DNS name to run tests against', default=os.environ.get('TEST_HOST'))
@arg('testfile', default=os.environ.get('TEST_FILE'), metavar='TEST_FILE', help='The json file that details the tests to execute')
@arg('--force', help='Use http methods that can potentially change data (PUT, POST, DELETE, etc. ie !GET)', default=False)
def smolder_cli(**kwargs):
    """ Parse CLI args and if valid dispatch to lower methods """
    all_tests = []
    total_passed_tests = 0
    total_failed_tests = 0

    # Load the test specification file, parse the json and create a 'tests' object
    try:
        myfile = open(kwargs['testfile'])
        test_input = yaml.load(myfile)
        tests = test_input['tests']
    except IOError:
        LOG.exception("Couldn't open test file {0}".format(kwargs['testfile']))
        raise
    except ValueError:
        LOG.exception("Invalid data in file {0}".format(kwargs['testfile']))
        raise
    except KeyError:
        LOG.exception("No tests defined in {0}".format(kwargs['testfile']))
        raise
    if len(tests) == 0:
        LOG.error("There are no tests configured in {0}: You MUST specify at least one test".format(kwargs['testfile']))
        sys.exit(2)

    LOG.debug("Beginning default TCP test")
    port = getattr(tests[0], 'port', 80)
    tcp_test(str(kwargs['host']), port)
    LOG.debug("Passed default TCP test")
    print("Preparing to execute {0} tests".format(len(tests)))
    # Iterate through all the tests

    for test in test_input['tests']:
        test_obj = Charcoal(name=test['name'], test=test, host=kwargs['host'])
        print(str(test_obj))
        total_failed_tests += test_obj.failed
        total_passed_tests += test_obj.passed
        all_tests.append(test_obj)

    LOG.debug("Number of test objects: {0}".format(len(all_tests)))
    LOG.debug("failed: {0}, passed: {1}".format(total_failed_tests, total_passed_tests))
    if total_failed_tests > 0:
        print("FOUND {0} FAILURES IN {1} TESTS".format(str(total_failed_tests), str(total_passed_tests + total_failed_tests)))
        sys.exit(1)
    elif total_failed_tests == 0 and total_passed_tests == 0:
        print("No tests run: check plugins")
        sys.exit(3)
    else:
        print("ALL TESTS PASSED!")
